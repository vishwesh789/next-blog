{"pageProps":{"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"We’re living through an\"\n      }), \" \", _jsx(_components.strong, {\n        children: \"AI revolution\"\n      }), \". In just the last few days, Stanford released Alpaca AI, an LLM that can be trained for $600 and then subsequently took it down for Hallucinating too much. \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Bing\"\n      }), \" and \", _jsx(_components.strong, {\n        children: \"Adobe\"\n      }), \" both announced their own AI image generators. Microsoft Office introduced \", _jsx(_components.strong, {\n        children: \"Copilot\"\n      }), \", but the biggest news is \", _jsx(_components.strong, {\n        children: \"Bard\"\n      }), \" is now available as a public beta, google’s answer to GPT 4, which is already being put to use in its arch nemesis, Bing. \"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Based on some data I just made up, my usage of Google search has declined 63.9% since GPT Four came out last week. That’s a terrifying statistic for Google, who makes most of its money from Google search ads. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The good news for Google, though, is that they have more data about search than anybody else. They have virtually unlimited computing power on their own, custom hardware called TPUs, and a team of geniuses working on top secret projects like quantum computers. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"They even declared quantum supremacy. So I have extremely high expectations for Bard. I compared it to GPT 4 using four different experiments, and the results are absolutely shocking.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But first, what’s with the name Bard? \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Apparently, it’s supposed to mean Celtic storyteller. If I were in charge, I would name it something like Neurodominous 9000 or Encephalon Prime. It should strike fear in the hearts of the Microsofties. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The first thing I wanted to find out is if this thing could write code, so I prompted it to build me a basic to do app with JavaScript. Here we have Bard on the left side and GPT Four on the right side. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And amazingly, Bard gets the entire job done in just a few seconds. It takes GPT Four at least five times longer to complete the same problem. That’s pretty impressive, but going fast isn’t very useful if you’re dumb. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let’s find out if this code actually works. I ran the code in the browser and opened the console and immediately got an error. Basically, it’s trying to add an event listener to an element that doesn’t exist. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I know what the issue is, but I want to see if Bard can fix it. I tell Bard it’s not working and paste the error message into the prompt, and it does come up with a solution using a conditional statement that would actually fix the error. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But it doesn’t make the application work because that element still doesn’t exist. I try to nudge it in the right direction, but then it hallucinates and tells me to add an event listener to an input which wouldn’t work. I keep trying to nudge it, but then it fails catastrophically.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now, if we look at the GPT-4 response, you’ll first notice how it’s much more well documented. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In addition, when I try to run the actual code, I get a perfect working to do app with no errors. I ran this experiment multiple times on different demos and got similar results.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"So round one goes to GPT-4.\"\n      }), \" \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"In round two\"\n      }), \", we’ll see how creative it is. When it comes to idea generation. I’ve always wanted to write a romance novel, so I prompted it for some ideas. The Bard response was pretty simple and cliche, like the wrong man, a man and woman meet and fall in love, blah, blah, blah. It’s written at about an 8th grade level.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GPT-4 has a lot more creative depth, like stardust melodies. When a small town musician, Ella, lands a gig at a prestigious jazz club in New Orleans, she never expected to meet. \"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A world famous saxophone is struggling with his own demons. They journey through the vibrant history of jazz to create a love song that will last forever. Now that’s a fucking romance novel. So GPT Four can come up with better ideas, but who can write better poetry? \"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"The next prompt is to write a poem\"\n      }), \" about programming in the style of Dr Seuss. In this example, Bard gets the job done with lines like, I do not like this code in prob, i do not like this Bob the job, that’s pretty good. And one thing that stands out here is that it also provides a source for this work, which links back to some guy’s blog post, which provides a little more transparency into how it generated this work. \"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Bonus points to Bard for doing that.\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"But now let’s read GPT’s 4 poem.\"\n      }), \" He’d build them with care, with love most of all, from the binary bird to the algorithm ringer. As you can see, they both sound like Dr Seuss, but there’s just something special about GPT. \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Each stanza just drips off the tongue like honey. And that brings us to \", _jsx(_components.strong, {\n        children: \"round four\"\n      }), \", Spitting Facts, where I prompted them to explain how brainwaves work. Bard is way faster at outputting information, which is very useful for problems like this. \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"I would say GPT Four is slightly better.\"\n      }), \" \"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"But I’m going to give this round to Bard\"\n      }), \" because I’m kind of starting to feel bad for it. Bard is also getting flamed on social media right now. Now, and some people are doing the unthinkable switching from Google to Bing. \"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And Bard itself is already paranoid that Google is going to kill it off in the next one to two years. I never thought I would feel sorry for an artificial intelligence, but 2023 has been a crazy decade.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"title":"The ChatGPT killer: Google Bard?","metaDesc":"We’re living through an AI revolution. In just the last few days, Stanford released Alpaca AI, an LLM that can be trained for $600 and then subsequently took it down for Hallucinating too much. \n\n \n\nBing and Adobe both announced their own AI image generators. Microsoft Office introduced Copilot, but the biggest news is Bard is now available as a public beta, google’s answer to GPT 4, which is already being put to use in its arch nemesis, Bing. \n\n \n\nBased on some data I just made up, my usage of Google search has declined 63.9% since GPT Four came out last week. That’s a terrifying statistic for Google, who makes most of its money from Google search ads. ","tags":["Google Bard"],"slug":"the-chat-gpt-killer-google-bard","readTime":5,"img":"https://images.pexels.com/photos/2599244/pexels-photo-2599244.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","dataSources":null,"author":{"data":{"id":5,"attributes":{"username":"Ethan","email":"ethan@gmail.com","provider":"local","confirmed":true,"blocked":false,"createdAt":"2023-03-29T20:06:15.902Z","updatedAt":"2023-03-29T21:46:01.460Z"}}}},"__N_SSG":true}